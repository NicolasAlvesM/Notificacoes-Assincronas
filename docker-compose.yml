version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: nicolas
      RABBITMQ_DEFAULT_PASS: nicolas123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - notification-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notification-backend
    working_dir: /usr/src/app 
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://nicolas:nicolas123@rabbitmq:5672
      FILA_ENTRADA: fila.notificacao.entrada.nicolas
      FILA_STATUS: fila.notificacao.status.nicolas
      PORT: 3000
      WEBSOCKET_PORT: 3001
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - notification-network
    volumes:
      - ./backend:/usr/src/app  
      - node_modules_backend:/usr/src/app/node_modules
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 22.14.0-alpine
        NGINX_VERSION: alpine3.21
    container_name: notification-frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - notification-network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro

networks:
  notification-network:
    driver: bridge

volumes:
  rabbitmq_data:
  node_modules_backend: